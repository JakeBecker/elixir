defmodule Kernel.ParallelRequire do
  @moduledoc """
  A module responsible for requiring files in parallel.
  """

  @doc """
  Requires the given files.

  A callback that will be invoked with each file, or a keyword list of `callbacks` can be provided:

    * `:each_file` - invoked with each file

    * `:each_module` - invoked with file, module name, and binary code

    * `:return_errors` - return `{:ok, modules, warnings}` on success or
      `{:error, errors}` if compilation fails or if there are warnings and
      `warnings_as_errors` is set to true.

  When the `:return_errors` option is not set to true, this function returns
  the modules generated by each compiled file and will fail with an
  exception if compilation fails. When `:return_errors` is true, it returns
  `{:ok, modules, warnings}` on success and `{:error, errors}` on failure.
  """
  def files(files, options \\ [])

  def files(files, callback) when is_function(callback, 1) do
    Kernel.ParallelCompiler.require_files(files, [each_file: callback])
  end

  def files(files, options) when is_list(options) do
    Kernel.ParallelCompiler.require_files(files, options)
  end
end
